swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: "0.9.0"
  title: "WSO2 Identity Server Rest API - Recovery"
  description: |
    This document specifies a **RESTful API** for WSO2 **Identity Server** .

    It is written with [swagger 2](http://swagger.io/).

  contact:
    name: "WSO2"
    url: "http://wso2.com/products/identity-server/"
    email: "architecture@wso2.com"
  license: 
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes: 
  - https

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
host: apis.is.com

# The base path of the API.
# Will be prefixed to all paths.
# if the tenant domain is carbon.super basepath can be /api/identity/recovery/v0.9 like this too.
basePath: /t/{tenant-domain}/api/identity/recovery/v0.9

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes: 
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requestor is specified in the Accept header field
# of the corresponding request. 
# The actual media type returned will be specfied in the Content-Type header field 
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces: 
  - application/json
paths:
  # Endpoint uses to send recovery notificataion
  /recover-password:
    post:
      description: |
         This API is used to send password recovery confirmation over defined channels like email/sms
      x-wso2-request: |
        curl -X POST -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "Content-Type: application/json" -d '{"user": {"username": "isura","realm": "ENGINEERING","tenant-domain":"carbon.super"},"properties": []}' "https://localhost:9443/api/identity/recovery/v0.9/recover-password?type=emailÂ¬ify=true"
        
      x-wso2-response: |
        "HTTP/1.1 202 Accepted"
      summary: |
        Send Recovery Notification
       
      # This are the post parameters:
      parameters:
        -
          name: RecoveryInitiatingRequest
          in: body
          description:  It can be sent optional property parameters over email based on email template.
          required: true
          schema:
            $ref: '#/definitions/RecoveryInitiatingRequest'
        -
          name: type
          in: query
          description: Notification Type
          required: false
          type: string
          
        -
          name: notify
          in: query
          description:  If notify=true then, notifications will be internally managed. 
          required: false
          type: boolean          

      responses:
        202:
          description: Successful response
          schema:
            title: key
            type: string
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
          
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Password Recovery
        - Notification
            
    # Endpoint uses to reset user password
  /set-password:

    post:
      description: |
        This API will be used to reset user password using the confirmatin key recieved through recovery process. Need to input `key`  and the new `password`.
      x-wso2-request: |
        curl -X POST -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "Content-Type: application/json" -d '{"key": "5c765a47-6764-4048-b5cf-55864cb654c0", "password": "P@ssW0rd","properties": []}' "https://localhost:9443/api/identity/recovery/v0.9/set-password"
            
      x-wso2-response: |
        "HTTP/1.1 200 OK"        
      summary: |
        Update Password
       
      parameters:
        -
          name: ResetPasswordRequest
          in: body
          description:  key, password and optional metadata properties
          required: true
          schema:
            $ref: '#/definitions/ResetPasswordRequest'

      responses:
        202:
          description: Successful response
          
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
             
        412:
          description: Precondition Falied
          schema:
             $ref: '#/definitions/RetryError'             
          
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Password Recovery
        - Notification

  /validate-code:
    post:
      description: |
        This API is used to validate confirmation codes sent in account recovery scenarios and self signup.Need to put confirmation "code" and recovery "step" as parameters.
      x-wso2-request: |
        curl -k -v -X POST -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "Content-Type: application/json" -d '{ "code": "84325529-8aa7-4851-8751-5980a7f2d9f7","step": "UPDATE_PASSWORD","properties": []}' "https://localhost:9443/api/identity/recovery/v0.9/validate-code"

      x-wso2-response: |
        "HTTP/1.1 202 Accepted"

      summary: |
        Validate Confirmation Code

      # This are the post parameters:
      parameters:
        -
          name: CodeValidationRequest
          in: body
          description:  code, recovery step and optianal parameters. For recovery steps you can use values from "UPDATE_PASSWORD","CONFIRM_SIGN_UP","VALIDATE_CHALLENGE_QUESTION", "VALIDATE_ALL_CHALLENGE_QUESTION" four categories according to the recovery scenario you want to validate the code.
          required: true
          schema:
            $ref: '#/definitions/CodeValidationRequest'
      responses:
        202:
          description: Accepted
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'

        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Password Recovery


   # Endpoint uses to initiate password reset with security questions
  /security-question:
     get:
      description: |
         This API is used to initiate password recovery using user challenge questions. Response will be a random challenge question with a confirmation key.
      x-wso2-request: |
         curl -X GET -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "Content-Type: application/json"  "https://localhost:9443/api/identity/recovery/v0.9/security-question?username=isura"

      x-wso2-response: |
          {"key":"7ced9ef0-7f3f-4f65-a115-ddbcce3a6b49","question":{"question":"City where you were born ?","question-set-id":"http://wso2.org/claims/challengeQuestion1"}
      summary: |
        Get Challenge Question of User

      # This are the post parameters:
      parameters:
        -
          name: username
          in: query
          description: username of the user
          required: true
          type: string
        -
          name: realm
          in: query
          description: |
            `User Store Domain` which user belongs. If not specified, it will be `PRIMARY` domain.
          required: false
          type: string
        -
          name: tenant-domain
          in: query
          description: |
            `Tenant Domain` which user belongs. If not specified, it will be `carbon.super` domain.
          required: false
          type: string


      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/InitiateQuestionResponse'
        204:
          description: No content
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'

        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Password Recovery
        - Security Question

   # Endpoint uses to initiate password reset with security questions
  /security-questions:
     get:
      description: |
         This API is used to initiate password recovery using user challenge questions at once. Response will be a random challenge questions with a confirmation key.
      x-wso2-request: |
         curl -X GET -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "Content-Type: application/json"  "https://localhost:9443/api/identity/recovery/v0.9/security-question?username=isura"

      x-wso2-response: |
          {"key":"f9f04fd7-3666-4bc6-bc99-9190b04b0ccc","questions":[{"question":"City where you were born ?","question-set-id":"http://wso2.org/claims/challengeQuestion1"},{"question":"Model of your first car ?","question-set-id":"http://wso2.org/claims/challengeQuestion2"}],"link":{"rel":"validate-answer","uri":"/api/identity/recovery/v0.9"}}
      summary: |
        Get Challenge Questions of User

      # This are the post parameters:
      parameters:
        -
          name: username
          in: query
          description: username of the user
          required: true
          type: string
        -
          name: realm
          in: query
          description: |
            `User Store Domain` which user belongs. If not specified, it will be `PRIMARY` domain.
          required: false
          type: string
        -
          name: tenant-domain
          in: query
          description: |
            `Tenant Domain` which user belongs. If not specified, it will be `carbon.super` domain.
          required: false
          type: string


      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/InitiateAllQuestionResponse'
        204:
          description: No content

        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'

        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Password Recovery
        - Security Question

  /validate-answer:
     post:
      description: |
         This is used to validate user challenge answer. If user challenge answer is valid, it will send another challenge question to answer until the status become `COMPLETE`. If the answer is wrong, user can retry the answer.
      x-wso2-request: |
         curl -k -X POST -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "Content-Type: application/json" -d '{"key": "0b20bd4d-cd82-4e8f-8ca4-4d265360b56b","answers": [{ "question-set-id": "http://wso2.org/claims/challengeQuestion1","answer": "born"},{"question-set-id": "http://wso2.org/claims/challengeQuestion2","answer": "car"}],"properties": []}' "https://localhost:9443/api/identity/recovery/v0.9/validate-answer"


      x-wso2-response: |
          {"key":"c45d7251-59f1-468d-9844-8a6d7c5fe9d9","question":null,"link":{"rel":"set-password","uri":"/api/identity/recovery/v0.9"}}
      summary: |
        Validate user challenge answer/answers.

      # This are the post parameters:
      parameters:
        -
          name: AnswerVerificationRequest
          in: body
          description: User answers verification with key returned in privious step.
          required: true
          schema:
            $ref: '#/definitions/AnswerVerificationRequest'

      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/InitiateQuestionResponse'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/RetryError'

        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Password Recovery
        - Security Question


  /recover-username/:
    post:
      description: |
       This API can be used to recover forgot username.
      x-wso2-request: |
         curl -X POST -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "Content-Type: application/json" -d '[{"uri": "http://wso2.org/claims/givenname","value": "isura"},{"uri": "http://wso2.org/claims/emailaddress", "value": "isuradil@email.com"},{"uri": "http://wso2.org/claims/lastname","value": "karunaratne" }]' "https://localhost:9443/api/identity/recovery/v0.9/recover-username/"

      x-wso2-response: |
        "HTTP/1.1 202 Accepted"

      summary: |
        Recover username

      parameters:
        -
          name: Claim
          in: body
          description: User answers for recovery claims.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/UserClaim'
        -
          name: tenant-domain
          in: query
          description: Tenant Domain which user belongs. Default `carbon.super`
          required: false
          type: string
        -
          name: notify
          in: query
          description:  If notify=true then, notifications will be internally managed.
          required: false
          type: boolean

      responses:
        202:
          description: Successful response
        204:
          description: No valid user found for given data

        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'

        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Username Recovery
        - Notification

  /claims:
    get:
      description: |
       return the recovery supported claims in the given tenant.
      x-wso2-request: |
         curl -X GET -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "Content-Type: application/json" "https://localhost:9443/api/identity/recovery/v0.9/claims?tenant-domain=carbon.super"

      x-wso2-response: |
        [{"uri":"http://wso2.org/claims/mobile","value":null,"description":"Mobile","display-name":"Mobile","dialect":"http://wso2.org/claims","required":false,"readOnly":false},{"uri":"http://wso2.org/claims/role","value":null,"description":"Role","display-name":"Role","dialect":"http://wso2.org/claims","required":false,"readOnly":true},{"uri":"http://wso2.org/claims/givenname","value":null,"description":"First Name","display-name":"First Name","dialect":"http://wso2.org/claims","required":true,"readOnly":false},{"uri":"http://wso2.org/claims/organization","value":null,"description":"Organization","display-name":"Organization","dialect":"http://wso2.org/claims","required":false,"readOnly":false},{"uri":"http://wso2.org/claims/im","value":null,"description":"IM","display-name":"IM","dialect":"http://wso2.org/claims","required":false,"readOnly":false},{"uri":"http://wso2.org/claims/lastname","value":null,"description":"Last Name","display-name":"Last Name","dialect":"http://wso2.org/claims","required":true,"readOnly":false},{"uri":"http://wso2.org/claims/telephone","value":null,"description":"Telephone","display-name":"Telephone","dialect":"http://wso2.org/claims","required":false,"readOnly":false},{"uri":"http://wso2.org/claims/country","value":null,"description":"Country","display-name":"Country","dialect":"http://wso2.org/claims","required":false,"readOnly":false},{"uri":"http://wso2.org/claims/emailaddress","value":null,"description":"Email Address","display-name":"Email","dialect":"http://wso2.org/claims","required":true,"readOnly":false},{"uri":"http://wso2.org/claims/url","value":null,"description":"URL","display-name":"URL","dialect":"http://wso2.org/claims","required":false,"readOnly":false}]

      summary: |
       Get Supported Claims

      parameters:
        -
          name: tenant-domain
          in: query
          description: tenant domain. Default `carbon.super`
          required: false
          type: string


      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Claim'

        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'

        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Username Recovery

definitions:
#-----------------------------------------------------
# The User  Object
#-----------------------------------------------------
  User:
    type: object
    properties:
      username:
        type: string
      realm:
        type: string
#-----------------------------------------------------
# The Credential  object
#-----------------------------------------------------
  ResetPasswordRequest:
    type: object
    properties:
      key:
        type: string
      password:
        type: string
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'

#-----------------------------------------------------
# The Error Response  object
#-----------------------------------------------------
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      description:
        type: string
#-----------------------------------------------------
# The Security Question  object
#-----------------------------------------------------
  Question:
    type: object
    properties:
      question:
        type: string
      question-set-id:
        type: string
#-----------------------------------------------------
# Security Answers verificiaton request  object
#-----------------------------------------------------
  AnswerVerificationRequest:
    type: object
    properties:
      key:
        type: string
      answers:
        type: array
        items:
          $ref: '#/definitions/SecurityAnswer'
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'

#-----------------------------------------------------
# The Error Response  object
#-----------------------------------------------------
  RetryError:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      description:
        type: string
      key:
        type: string
#-----------------------------------------------------
# The Property  object
#-----------------------------------------------------
  Property:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
#-----------------------------------------------------
# Security Answers verificiaton response  object
#-----------------------------------------------------
  RecoveryInitiatingRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/User'
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'
#-----------------------------------------------------
# The InitiateAllQuestionResponse Response  object
#-----------------------------------------------------
  InitiateAllQuestionResponse:
    type: object
    properties:
      key:
        type: string
      questions:
        type: array
        items:
          $ref: '#/definitions/Question'
      link:
        $ref: '#/definitions/Link'

#-----------------------------------------------------
# The InitiateQuestionResponse Response  object
#-----------------------------------------------------
  InitiateQuestionResponse:
    type: object
    properties:
      key:
        type: string
      question:
        $ref: '#/definitions/Question'
      link:
        $ref: '#/definitions/Link'


#-----------------------------------------------------
# User Security Answer  object
#-----------------------------------------------------
  SecurityAnswer:
    type: object
    properties:
      question-set-id:
        type: string
      answer:
        type: string
#-----------------------------------------------------
# Claim  object
#-----------------------------------------------------
  Claim:
    type: object
    properties:
      uri:
        type: string
      value:
        type: string
      description:
        type: string
      display-name  :
        type: string
      dialect:
        type: string
      validation-regex:
        type: string
      required:
        type: boolean
      read-only:
        type: boolean
#-----------------------------------------------------
# Link object
#-----------------------------------------------------
  Link:
    type: object
    properties:
      rel:
        type: string
      uri:
        type: string

#-----------------------------------------------------
# User Claim  object
#-----------------------------------------------------
  UserClaim:
    type: object
    properties:
      uri:
        type: string
      value:
        type: string
#-----------------------------------------------------

#-----------------------------------------------------
# The CodeValidationRequest  object
#-----------------------------------------------------
  CodeValidationRequest:
    type: object
    properties:
      code:
        type: string
      step:
        type: string
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'
#-----------------------------------------------------

#-----------------------------------------------------
# The CodeValidationRequest  object
#-----------------------------------------------------
  CodeValidationRequest:
    type: object
    properties:
      code:
        type: string
      step:
        type: string
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'
#-----------------------------------------------------


